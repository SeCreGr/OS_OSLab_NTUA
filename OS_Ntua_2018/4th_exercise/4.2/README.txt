HOW THE SHELL WORKS:	It receives as arguments two file descriptors. One for writing requests into apipe and one to write return values to another pipe. These return values give information about the achievement of the request. In general it reads with "get_cmdline" a command given by the user and constructs a struct with all theinformation needed for that command to be executed. Then it writes it in the pipe.Another process (scheduler) reads it and as soon as it finishes its actions writesto pipe the return value. Shell reads it and sees whether the result was ok ornot.HOW SHCEDULER WORKS:	It constructs the processes given as arguments by the user plus the shell. The processes raise SIGSTOP signal. It puts them in a cirqular queue and starts thefirst process which is the shell. Then it gets stuck in "shell_request_loop". Thereit waits for the shell to make a request, it reads it, processes it and finally writes in the other pipe the return value of the request.In 2 seconds alarm goes on and scheduler goes in sigalarm_handler where it stops thefirst child. Then it goes in sigchld_handler since a child has stopped (or terminated or killed) and starts the next one and so on ...	 